"""Add sensors table and foreign key

Revision ID: 533cb04488d9
Revises: e128e25891d1
Create Date: 2025-07-25 16:52:35.425485

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "533cb04488d9"
down_revision: Union[str, Sequence[str], None] = "e128e25891d1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sensors",
        sa.Column("id", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )

    # Insert sensors from existing sensor_data
    op.execute(
        """
        INSERT INTO sensors (id)
        SELECT DISTINCT device_id FROM sensor_data
        WHERE device_id IS NOT NULL
        ON CONFLICT DO NOTHING;
    """
    )

    op.create_foreign_key(None, "sensor_data", "sensors", ["device_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "sensor_data", type_="foreignkey")
    op.drop_table("sensors")
    # ### end Alembic commands ###
